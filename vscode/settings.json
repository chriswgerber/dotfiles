{
  "[go]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
    "editor.formatOnSave": true,
    "editor.snippetSuggestions": "none"
  },
  "[markdown]": {
    "editor.quickSuggestions": {
      "comments": "off",
      "other": "off",
      "strings": "off"
    },
    "editor.wordWrap": "on"
  },
  "ansible.validation": false,
  "autoDocstring.docstringFormat": "google",
  "autoDocstring.includeName": true,
  "autoDocstring.startOnNewLine": true,
  "aws.telemetry": false,
  "breadcrumbs.enabled": true,
  "customizeUI.font.monospace": "Input Mono",
  "customizeUI.font.regular": "Input Sans Narrow",
  "customizeUI.fontSizeMap": {
    "12px": "11px",
    "13px": "11px",
    "tab-title": "12px",
    "window-title": "12px"
  },
  "docker.languageserver.diagnostics.directiveCasing": "error",
  "docker.languageserver.diagnostics.emptyContinuationLine": "error",
  "docker.languageserver.diagnostics.instructionCasing": "error",
  "docker.languageserver.diagnostics.instructionWorkdirRelative": "error",
  "editor.bracketPairColorization.enabled": true,
  "editor.fontFamily": "JetBrains Mono,FiraCode Retina",
  "editor.fontLigatures": true,
  "editor.fontSize": 13,
  "editor.formatOnType": true,
  "editor.insertSpaces": false,
  "editor.largeFileOptimizations": false,
  "editor.minimap.enabled": false,
  "editor.rulers": [
    {
      "color": "#85ff85",
      "column": 88
    },
    {
      "color": "#8585ff",
      "column": 100
    },
    {
      "color": "#ff8585",
      "column": 120
    }
  ],
  "explorer.decorations.badges": false,
  "explorer.openEditors.visible": 0,
  "files.associations": {
    "*.j2": "jinja-yaml",
    "**/ansible/**/*.yml": "ansible"
  },
  "files.exclude": {
    "**/.git": false,
    "**/.hg": false,
    "**/.svn": false,
    "**/CVS": false
  },
  "git.enabled": false,
  "gitlab.pipelineGitRemoteName": "origin",
  "gitlab.remoteName": "origin",
  "gitlab.showIssueLinkOnStatusBar": false,
  "gitlab.showPipelineUpdateNotifications": true,
  "go.buildOnSave": "off",
  "go.formatTool": "goimports",
  "go.languageServerExperimentalFeatures": {
    "diagnostics": true
  },
  "go.toolsManagement.autoUpdate": true,
  "go.useLanguageServer": true,
  "go.vetOnSave": "off",
  "json.schemas": [
    {
      "fileMatch": [
        "cloudformation.json"
      ],
      "url": "https://raw.githubusercontent.com/awslabs/goformation/master/schema/cloudformation.schema.json"
    }
  ],
  "jupyter.enabled": false,
  "launch": {
    "configurations": [
      {
        "mode": "debug",
        "name": "Dlv-gitlab_project",
        "program": "${workspaceFolder}/gen/gitlab_project.go",
        "request": "launch",
        "showLog": true,
        "type": "go"
      }
    ],
    "version": "0.2.0"
  },
  "markdown.links.openLocation": "beside",
  "markdown.styles": [
    ".project/base.css",
    ".project/markdown.css"
  ],
  "markdown.trace": "verbose",
  "markdownlint.run": "onSave",
  "material-icon-theme.activeIconPack": "react_redux",
  "material-icon-theme.hidesExplorerArrows": true,
  "material-icon-theme.folders.color": "#7cb342",
  "materialTheme.accent": "Acid Lime",
  "mermaid.arrowMarkerAbsolute": true,
  "mermaid.gantt.fontSize": 12,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "plantuml.render": "PlantUMLServer",
  "plantuml.server": "http://localhost:8080",
  "protoc": {
    "compile_on_save": false,
    "options": [
      "--proto_path=proto/"
    ]
  },
  "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
  "python.formatting.provider": "black",
  "python.languageServer": "Pylance",
  "python.linting.banditEnabled": true,
  "python.linting.enabled": true,
  "python.linting.pydocstyleEnabled": true,
  "python.testing.cwd": "${workspaceFolder}/",
  "python.testing.pytestEnabled": true,
  "python.venvPath": "${env:HOME}/.pyenv",
  "redhat.telemetry.enabled": false,
  "restructuredtext.preview.fontFamily": "Input Sans, -apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.lineHeight": 1.2,
  "terraform.languageServer": {
    "args": [
      "serve"
    ],
    "external": true
  },
  "todo-tree.filtering.ignoreGitSubmodules": true,
  "todo-tree.filtering.includeHiddenFiles": true,
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]",
    "@TODO"
  ],
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "todo-tree.tree.showScanModeButton": false,
  "vsicons.dontShowNewVersionMessage": true,
  "window.commandCenter": true,
  "workbench.colorCustomizations": {},
  "workbench.colorTheme": "Penumbra Dark Contrast++",
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "workbench.fontAliasing": "auto",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.sideBar.location": "left",
  "workbench.startupEditor": "newUntitledFile",
  "yaml.customTags": [
    "!And",
    "!Base64",
    "!Cidr",
    "!Equals",
    "!FindInMap scalar",
    "!FindInMap sequence",
    "!GetAtt",
    "!GetAZs",
    "!If",
    "!ImportValue",
    "!Join",
    "!Not",
    "!Or",
    "!Ref scalar",
    "!Select",
    "!Split",
    "!Sub scalar",
    "!Sub sequence",
    "!And sequence",
    "!If sequence",
    "!Not sequence",
    "!Equals sequence",
    "!Or sequence",
    "!FindInMap",
    "!Join sequence",
    "!Ref",
    "!Sub",
    "!ImportValue sequence",
    "!Select sequence",
    "!Split sequence"
  ],
  "yaml.format.enable": true,
  "yaml.schemas": {
    "http://json.schemastore.org/ansible-stable-2.5": "/ansible/**.yml",
    "http://json.schemastore.org/gitlab-ci": "/.gitlab-ci.yml",
    "https://dev.azure.com/healthcarecloud/_apis/distributedtask/yamlschema": "/azure-pipelines.yml",
    "https://raw.githubusercontent.com/awslabs/goformation/master/schema/cloudformation.schema.json": "/**/*.cf.yml"
  },
  "yaml.schemaStore.enable": true,
  "yaml.validate": true,
  "[python]": {
    "editor.formatOnType": true
  }
}
